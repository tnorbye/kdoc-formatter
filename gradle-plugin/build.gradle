buildscript {
    apply from: "$rootDir/../version.gradle"

    ext {
        gradlePluginVersion = '8.6.0'
    }

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradlePluginVersion"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '2.1.21'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '1.3.1'
    id 'com.ncorti.ktfmt.gradle' version '0.22.0'
}

// https://issues.sonatype.org/browse/OSSRH-63191
group = "com.github.tnorbye.kdoc-formatter"
version = rootProject.ext.buildVersion

repositories {
    google()
    mavenCentral()
    gradlePluginPortal()
}

// Instead of depending on project(":cli") below, we inline the
// sources in the plugin such that we don't have to publish
// separate artifacts for the library and cli modules
sourceSets {
    main.java.srcDirs += '../cli/src/main/kotlin'
    main.java.srcDirs += '../library/src/main/kotlin'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation gradleApi()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

kotlin {
    jvmToolchain(17)
}

gradlePlugin {
    website = 'https://github.com/tnorbye/kdoc-formatter'
    vcsUrl = 'https://github.com/tnorbye/kdoc-formatter.git'

    plugins {
        kdocformatter {
            id = "kdoc-formatter"
            displayName = 'KDoc Formatting'
            description = 'Plugin which can reformat Kotlin KDoc comments'
            implementationClass = "kdocformatter.gradle.KDocFormatterPlugin"
            tags.set(['kotlin', 'kdoc', 'formatter', 'formatting'])
        }
    }
}

/*
publishing {
    publications {
        pluginPublication (MavenPublication) {
            from components.java
            groupId "com.github.tnorbye.kdoc-formatter"
            artifactId "kdoc-formatter"
            //version project.version
            version rootProject.ext.buildVersion
        }
    }
}
*/

publishing {
    repositories {
        maven {
            url "../m2"
        }
    }
}

clean.doFirst {
    delete "${rootDir}/../m2"
}

task all {
    dependsOn 'clean', 'publish'
}
