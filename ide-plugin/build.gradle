plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.intellij' version '0.6.5'
    id 'com.android.lint'
    id 'com.ncorti.ktfmt.gradle'
}

group = "kdoc-formatter"
version = rootProject.ext.buildVersion

repositories {
    google()
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    implementation project(':library')
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2020.3'
    pluginName = "kdoc-formatter-ide-plugin"
    updateSinceUntilBuild = false

    runIde {
        jvmArgs "-Didea.ProcessCanceledException=disabled"
    }
}

patchPluginXml {
    changeNotes """
<p>
1.3.2: Bugfixes and update deprecated API usage for 2021.2
compatibility
<p>
1.3.1: This version contains the following improvements:
<ul>
<li>Fix a few bugs around markup conversion not producing the right number
of blank lines for a &lt;p>, as well as add a few more prefixes as
non-breakable (e.g. if you have an em dash in your sentence -- like
this -- we don't want the "--" to be placed at the beginning of a
line.)
<li>Also adds an --add-punctuation command line flag and IDE setting to
optionally add closing periods on capitalized paragraphs at the end of
the comment.
<li>Special cases TODO: comments (placing them in a block by themselves
and using hanging indents).
</ul>
<p>
1.3.0: This version contains the following improvements:
<ul>
<li> Many improves to the markdown handling, such as quoted
  blocks, headers, list continuations, etc.
<li> Markup conversion, which until this point could convert inline tags
  such as &lt;b>bold&lt;/b> into **bold**, etc, now handles many block level
  tags too, such as &lt;p>, &lt;h1>, etc.
<li> The IDE plugin can now also reformat line comments under the
  caret. (This is opt-in via options.)
<p>
1.2.0: IDE settings panel and ability to alternate formatting
    between greddy and optimal line breaking when invoked repeatedly
    (and for short comments, alternating between single line and
    multiple lines.)
</p>
<p>
1.1.2: Basic support for <code>.editorconfig</code> files.
</p>
<p>
1.1: Support for setting maximum comment width (capped by the maximum line width).
</p>
<p>
1.0: Initial version
</p>
"""
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

tasks.getByName("buildSearchableOptions").enabled = false
